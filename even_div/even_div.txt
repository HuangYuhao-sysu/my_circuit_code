// =============================================================================
// Project Name        : even_div
// Email               : huangyh76@mail2.sysu.edu.cn
// Company             : Sun Yat-Sen University
// Create Time         : 2022/06/24
// File Name           : even_div.v
// Module Name         : even_div
// Designer            : Huangyh
// Editor              : vs code
//
// *****************************************************************************
// Abstract            : recuitment code training
//
// *****************************************************************************
//
// Modification History:
// Date                By              Version             Change Description
// -----------------------------------------------------------------------------
// 2022/06/24       Huangyh             1.0                         none
//
// =============================================================================

`timescale 1ns / 1ps

module even_div (
    input       clk,    // Clock
    input       rst_n,  // Asynchronous reset active low

    output  reg even_div_clk
);

// =========================================================================== \
// ============================== Define parameter ===========================
// =========================================================================== /
parameter DIV_NUM = 8;
parameter CNT_WIDTH = 16;

// =========================================================================== \
// ============================= Internal signals ============================
// =========================================================================== /
reg [CNT_WIDTH-1:0] cnt;

// =========================================================================== \
// --------------------------------- Main Code ---------------------------------
// =========================================================================== /

//==============================================================================
// cnt generated
//==============================================================================
always @(posedge clk or negedge rst_n) begin
    if (rst_n == 1'b0) begin
        // reset
        cnt <=  0;
    end

    else if (cnt == DIV_NUM/2-1) begin
        cnt <=  0;
    end

    else begin
        cnt <=  cnt + 1;
    end
end

always @(posedge clk or negedge rst_n) begin
    if (rst_n == 1'b0) begin
        // reset
        even_div_clk    <=  0;
    end

    else if (cnt == DIV_NUM/2-1) begin
        even_div_clk    <=  ~even_div_clk;
    end
end

endmodule