// =============================================================================
// Project Name        : rr_arbiter
// Email               : huangyh76@mail2.sysu.edu.cn
// Company             : Sun Yat-Sen University
// Create Time         : 2022/07/01
// File Name           : rr_arbiter.v
// Module Name         : rr_arbiter
// Designer            : Huangyh
// Editor              : vs code
//
// *****************************************************************************
// Abstract            : recruitment code training
//
// *****************************************************************************
//
// Modification History:
// Date                By              Version             Change Description
// -----------------------------------------------------------------------------
// 2022/07/01       Huangyh             1.0                         none
//
// =============================================================================

`timescale 1ns / 1ps

module rr_arbiter # (

) (
    input           clk,    // Clock
    input           rst_n,  // Asynchronous reset active low
    input   [2:0]   req,
    output  [2:0]   gnt
);

// =========================================================================== \
// --------------------------------- Main Code ---------------------------------
// =========================================================================== /
always @(posedge clk or negedge rst_n) begin
    if (rst_n == 1'b0) begin
        // reset
        gnt <= 3'b000;
    end

    else begin
        case (gnt)
            3'b000: begin
                case (req)
                    3'b000: gnt <=  3'b000;
                    3'b001: gnt <=  3'b001;
                    3'b010: gnt <=  3'b010;
                    3'b011: gnt <=  3'b001;
                    3'b100: gnt <=  3'b100;
                    3'b101: gnt <=  3'b001;
                    3'b110: gnt <=  3'b010;
                    3'b111: gnt <=  3'b001;
                endcase
            end

            3'b001: begin
                case (req)
                    3'b000: gnt <=  3'b000;
                    3'b001: gnt <=  3'b001;
                    3'b010: gnt <=  3'b010;
                    3'b011: gnt <=  3'b010;
                    3'b100: gnt <=  3'b100;
                    3'b101: gnt <=  3'b100;
                    3'b110: gnt <=  3'b010;
                    3'b111: gnt <=  3'b010;
                endcase
            end

            3'b010: begin
                case (req)
                    3'b000: gnt <=  3'b000;
                    3'b001: gnt <=  3'b001;
                    3'b010: gnt <=  3'b010;
                    3'b011: gnt <=  3'b010;
                    3'b100: gnt <=  3'b100;
                    3'b101: gnt <=  3'b100;
                    3'b110: gnt <=  3'b100;
                    3'b111: gnt <=  3'b100;
                endcase
            end

            3'b100: begin
                case (req)
                    3'b000: gnt <=  3'b000;
                    3'b001: gnt <=  3'b001;
                    3'b010: gnt <=  3'b010;
                    3'b011: gnt <=  3'b001;
                    3'b100: gnt <=  3'b100;
                    3'b101: gnt <=  3'b001;
                    3'b110: gnt <=  3'b010;
                    3'b111: gnt <=  3'b001;
                endcase
            end

            default :   gnt <=  3'b000;
        endcase
    end
end

endmodule